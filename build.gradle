plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.8.4"
}

version = mod_version
group = mod_group_id

base {
    archivesName = "NethersDelight-Refabricated"
}

loom {
    accessWidenerPath = file("src/main/resources/nethersdelight.accesswidener")
}

sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
}

repositories {
    flatDir {
        dirs 'mods'
    }
    mavenLocal()
    maven { url "https://maven.parchmentmc.org" }
    maven {
        url "https://www.cursemaven.com"
        allowInsecureProtocol = true
    }
    maven {
        url "https://maven.firstdarkdev.xyz/snapshots"
    }
    maven {
        name 'Ladysnake Mods'
        url 'https://maven.ladysnake.org/releases'
    }
    maven {
        url "https://api.modrinth.com/maven"
    }
    maven {
        name = "Greenhouse Maven"
        url = 'https://maven.greenhouseteam.dev/releases/'
    }
    maven {
        name "BlameJared"
        url "https://maven.blamejared.com/"
    } // CraftTweaker, JEI
    maven {
        url "https://maven.ryanliptak.com/"
    } // AppleSkin
    maven {
        url "https://maven.parchmentmc.org"
    } // Parchment
    maven {
        url "https://maven.fabricmc.net/"
    } // FAPI, Loader
    maven {
        url "https://mvn.devos.one/releases/"
    } // Registrate, Porting Lib, Forge Tags, Milk Lib
    maven {
        url = "https://jitpack.io/"
    } // for Porting Lib: Fabric ASM
    maven {
        url "https://maven.shedaniel.me/"
    } // REI and deps
    maven {
        url = "https://maven.terraformersmc.com/"
    } // Mod Menu, EMI
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    } // Reach Entity Attributes
    mavenCentral() // Mixin Extras
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.layered() {
        it.parchment("org.parchmentmc.data:parchment-${project.parchment_version}")
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    modImplementation "vectorwing:FarmersDelight-Refabricated:${fdrf_version}"

    annotationProcessor "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'

    modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")

    modCompileOnly("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")
    // Uncomment the below to test CraftTweaker.
    // modLocalRuntime("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")

    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // Uncomment the below to test JEI.
    modLocalRuntime("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}"
    // Uncomment the below to test REI.
    // modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

    modCompileOnly("dev.emi:emi-fabric:${emi_version}:api") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // Uncomment the below to test EMI.
    /*
    modLocalRuntime("dev.emi:emi-fabric:${emi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // This is also required for EMI as it uses an out of date FAPI.
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api-deprecated:${fabric_api_version}"
     */
}


var env = System.getenv()

var changelogFile = rootProject.file("changelog.md")
var changelogText = changelogFile.exists() ? changelogFile.text : ""

if (env.MODRINTH_TOKEN) {
    modrinth {
        projectId = modrinth_project_id
        versionName = "Farmer's Delight Refabricated ${mod_version.split("-")[1]} - ${minecraft_version}"
        uploadFile = tasks.remapJar
        gameVersions = [minecraft_version]
        loaders = ["fabric", "quilt"]
        changelog = changelogText
        versionNumber = mod_version
        versionType = "release"

        dependencies {
            required.project "fabric-api"
            required.project "farmers-delight-refabricated"
            optional.project "crafttweaker"
            optional.project "jei"
            optional.project "rei"
            optional.project "emi"
        }
    }
}

if (env.CURSEFORGE_TOKEN) {
    curseforge {
        apiKey = env.CURSEFORGE_TOKEN
        project {
            id = project_id
            changelog = changelogText
            changelogType = 'markdown'
            releaseType = 'release'
            addGameVersion minecraft_version
            addGameVersion "Fabric"
            addGameVersion "Quilt"

            mainArtifact(tasks.remapJar) {
                displayName = "Farmer's Delight Refabricated ${mod_version.split("-")[1]} - ${minecraft_version}"
            }

            relations {
                requiredDependency "fabric-api"
                requiredDependency "farmers-delight-refabricated"
                optionalDependency "crafttweaker"
                optionalDependency "jei"
                optionalDependency "roughly-enough-items"
                optionalDependency "emi"
            }
        }
    }
}

processResources {
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github,
            port_lib_version     : port_lib_version
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name "repository"
            url "https://maven.dragons.plus/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}